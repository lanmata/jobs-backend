# This is the main configuration file for the application.
# It uses the YAML format for easier readability and nested configuration.

# Application specific configurations
app:
  clientRoles: jobs-offer-frontend-client, jobs-offer-frontend-client_o
  # The environments for the application
  api:
    endpoint: /api/v1
  # The name of the application
  name: jobs-backend-api
  # The version of the application
  version: 0.0.1-2024
# Spring Boot specific configurations
# Server specific configurations
server:
  port: 8092
  ssl:
    # Enables SSL for the server
    enabled: true
    # The SSL bundle for the server
    bundle: jobs-offer-security
    enabled-protocols: TLSv1.3
    compression:
      enabled: true
      mime-types: text/html,text/xml,text/plain,text/css,application/json
      min-response-size: 1024
spring:
  ssl:
    bundle:
      jks:
        jobs-offer-security:
          keystore:
            location: classpath:${SSL_KEYSTORE_LOCATION}
            password: ${SSL_KEYSTORE_PASSWORD}
            type: ${SSL_KEYSTORE_TYPE}
          truststore:
            location: classpath:${SSL_TRUSTSTORE_LOCATION}
            password: ${SSL_TRUSTSTORE_PASSWORD}
            type: ${SSL_TRUSTSTORE_TYPE}
  mvc:
    throw-exception-if-no-handler-found: true
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
  mustache:
    check-template-location: false
  test:
    context:
      failure:
        threshold: 10000000
  main:
    # Allows overriding of bean definitions
    allow-bean-definition-overriding: true
  profiles:
    active: ${SPRING_BOOT_PROFILE_ACTIVE}
  application:
    # The name of the Spring Boot application, taken from the app.name property
    name: ${app.name}
  security:
    # Disables the security for the Spring Boot application
    oauth2:
      #      client:
      #        provider:
      #          keycloak:
      #            issuer-uri:
      #        registration:
      #          keycloak:
      #            redirect-uri: ${AUTH_SERVER_URI}
      #            authorization-grant-type: password
      #            scope: openid
      #            client-secret: LCiN3vDUnAiVGD4KO1qWgcxHfdTlfJOB
      #            client-id: jobs-offer-ui-client
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_SERVER_URI}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  cloud:
    # The Spring Cloud Config specific configurations
    #<><><><><><><><><><><><><><> VAULT <><><><><><><><><><><><><><>
    vault:
      token: ${VAULT_TOKEN}
      uri: ${VAULT_SERVER_URL}
      kv:
        backend: PRX
        default-context: ${app.name}
      application-name: ${app.name}
    bootstrap:
      # Enables the Spring Cloud Bootstrap application context
      enabled: ${SPRING_BOOT_CLOUD_BOOTSTRAP_ENABLED}
    # The active profile for the Spring Boot application
    profile: ${SPRING_BOOT_PROFILE_ACTIVE}
    config:
      # The active profile for the Spring Cloud Config
      profile: dev
      # The label for the Spring Cloud Config
      label: ${SPRING_CLOUD_CONFIG_LABEL}
      # The URI for the Spring Cloud Config server
      uri: ${CNFS_URI}
      port: ${CNFS_PORT}
      # Enables sending of state for the Spring Cloud Config
      send-state: true
  jpa:
    properties:
      hibernate:
        boot:
          allow_jdbc_metadata_access: true
    # Defers the initialization of the datasource
    defer-datasource-initialization: true
eureka:
  client:
    serviceUrl:
      defaultZone: ${SRMN_DEFAULT_ZONE}
    enabled: false
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30

swagger:
  base-package: 'com.prx.jobs.backend.api.controller'
  api-info:
    title: ${app.name}
    version: ${app.version}
    description: ${app.description}
    contact:
      name: 'Luis Antonio Mata'
      url: 'www.prx.test'
      email: 'luis.antonio.mata@gmail.com'
    cache:
      disabled: true

# Management specific configurations
management:
  cloudfoundry:
    # Enables or disables Cloud Foundry management
    enabled: false
prx:
  security:
    keystore:
      location: ${SSL_JKS_CNFS_KEYSTORE_LOCATION}
      type: ${SSL_JKS_CNFS_KEYSTORE_TYPE}
      password: ${SSL_JKS_CNFS_KEYSTORE_PASSWORD}
    truststore:
      location: ${SSL_JKS_CNFS_TRUSTSTORE_LOCATION}
      type: ${SSL_JKS_CNFS_TRUSTSTORE_TYPE}
      password: ${SSL_JKS_CNFS_TRUSTSTORE_PASSWORD}
    management-authenticator:
      enabled: true
      keystore:
        location: ${SSL_JKS_CNFS_KEYSTORE_LOCATION}
        type: ${SSL_JKS_CNFS_KEYSTORE_TYPE}
        password: ${SSL_JKS_CNFS_KEYSTORE_PASSWORD}
      truststore:
        location: ${SSL_JKS_CNFS_KEYSTORE_LOCATION}
        type: ${SSL_JKS_CNFS_TRUSTSTORE_TYPE}
        password: ${SSL_JKS_CNFS_TRUSTSTORE_PASSWORD}
info:
paths:
jwt:
  auth:
    converter:
      resoucer-id: jobs-offer-ui-client
      principal-claim-name: jobs-offer-frontend-client
